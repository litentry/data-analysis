// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Pregnant extends ethereum.Event {
  get params(): Pregnant__Params {
    return new Pregnant__Params(this);
  }
}

export class Pregnant__Params {
  _event: Pregnant;

  constructor(event: Pregnant) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get matronId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sireId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get cooldownEndBlock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Birth extends ethereum.Event {
  get params(): Birth__Params {
    return new Birth__Params(this);
  }
}

export class Birth__Params {
  _event: Birth;

  constructor(event: Birth) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get kittyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get matronId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sireId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get genes(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ContractUpgrade extends ethereum.Event {
  get params(): ContractUpgrade__Params {
    return new ContractUpgrade__Params(this);
  }
}

export class ContractUpgrade__Params {
  _event: ContractUpgrade;

  constructor(event: ContractUpgrade) {
    this._event = event;
  }

  get newContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CryptoKitties__getKittyResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class CryptoKitties extends ethereum.SmartContract {
  static bind(address: Address): CryptoKitties {
    return new CryptoKitties("CryptoKitties", address);
  }

  supportsInterface(_interfaceID: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceID)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceID: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cfoAddress(): Address {
    let result = super.call("cfoAddress", "cfoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cfoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cfoAddress", "cfoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenMetadata(_tokenId: BigInt, _preferredTransport: string): string {
    let result = super.call(
      "tokenMetadata",
      "tokenMetadata(uint256,string):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromString(_preferredTransport)
      ]
    );

    return result[0].toString();
  }

  try_tokenMetadata(
    _tokenId: BigInt,
    _preferredTransport: string
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenMetadata",
      "tokenMetadata(uint256,string):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromString(_preferredTransport)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  promoCreatedCount(): BigInt {
    let result = super.call(
      "promoCreatedCount",
      "promoCreatedCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_promoCreatedCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "promoCreatedCount",
      "promoCreatedCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ceoAddress(): Address {
    let result = super.call("ceoAddress", "ceoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_ceoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("ceoAddress", "ceoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GEN0_STARTING_PRICE(): BigInt {
    let result = super.call(
      "GEN0_STARTING_PRICE",
      "GEN0_STARTING_PRICE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_GEN0_STARTING_PRICE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GEN0_STARTING_PRICE",
      "GEN0_STARTING_PRICE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pregnantKitties(): BigInt {
    let result = super.call(
      "pregnantKitties",
      "pregnantKitties():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_pregnantKitties(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pregnantKitties",
      "pregnantKitties():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isPregnant(_kittyId: BigInt): boolean {
    let result = super.call("isPregnant", "isPregnant(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_kittyId)
    ]);

    return result[0].toBoolean();
  }

  try_isPregnant(_kittyId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPregnant", "isPregnant(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_kittyId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  GEN0_AUCTION_DURATION(): BigInt {
    let result = super.call(
      "GEN0_AUCTION_DURATION",
      "GEN0_AUCTION_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_GEN0_AUCTION_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GEN0_AUCTION_DURATION",
      "GEN0_AUCTION_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  siringAuction(): Address {
    let result = super.call("siringAuction", "siringAuction():(address)", []);

    return result[0].toAddress();
  }

  try_siringAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "siringAuction",
      "siringAuction():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sireAllowedToAddress(param0: BigInt): Address {
    let result = super.call(
      "sireAllowedToAddress",
      "sireAllowedToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_sireAllowedToAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sireAllowedToAddress",
      "sireAllowedToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  canBreedWith(_matronId: BigInt, _sireId: BigInt): boolean {
    let result = super.call(
      "canBreedWith",
      "canBreedWith(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_sireId)
      ]
    );

    return result[0].toBoolean();
  }

  try_canBreedWith(
    _matronId: BigInt,
    _sireId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canBreedWith",
      "canBreedWith(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_sireId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kittyIndexToApproved(param0: BigInt): Address {
    let result = super.call(
      "kittyIndexToApproved",
      "kittyIndexToApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_kittyIndexToApproved(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "kittyIndexToApproved",
      "kittyIndexToApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GEN0_CREATION_LIMIT(): BigInt {
    let result = super.call(
      "GEN0_CREATION_LIMIT",
      "GEN0_CREATION_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_GEN0_CREATION_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GEN0_CREATION_LIMIT",
      "GEN0_CREATION_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  newContractAddress(): Address {
    let result = super.call(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_newContractAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  secondsPerBlock(): BigInt {
    let result = super.call(
      "secondsPerBlock",
      "secondsPerBlock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_secondsPerBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "secondsPerBlock",
      "secondsPerBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokensOfOwner(_owner: Address): Array<BigInt> {
    let result = super.call(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfOwner(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  giveBirth(_matronId: BigInt): BigInt {
    let result = super.call("giveBirth", "giveBirth(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_matronId)
    ]);

    return result[0].toBigInt();
  }

  try_giveBirth(_matronId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("giveBirth", "giveBirth(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_matronId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  cooldowns(param0: BigInt): BigInt {
    let result = super.call("cooldowns", "cooldowns(uint256):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_cooldowns(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("cooldowns", "cooldowns(uint256):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  kittyIndexToOwner(param0: BigInt): Address {
    let result = super.call(
      "kittyIndexToOwner",
      "kittyIndexToOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_kittyIndexToOwner(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "kittyIndexToOwner",
      "kittyIndexToOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cooAddress(): Address {
    let result = super.call("cooAddress", "cooAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cooAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cooAddress", "cooAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  autoBirthFee(): BigInt {
    let result = super.call("autoBirthFee", "autoBirthFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_autoBirthFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("autoBirthFee", "autoBirthFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  erc721Metadata(): Address {
    let result = super.call("erc721Metadata", "erc721Metadata():(address)", []);

    return result[0].toAddress();
  }

  try_erc721Metadata(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc721Metadata",
      "erc721Metadata():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isReadyToBreed(_kittyId: BigInt): boolean {
    let result = super.call(
      "isReadyToBreed",
      "isReadyToBreed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_kittyId)]
    );

    return result[0].toBoolean();
  }

  try_isReadyToBreed(_kittyId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isReadyToBreed",
      "isReadyToBreed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_kittyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  PROMO_CREATION_LIMIT(): BigInt {
    let result = super.call(
      "PROMO_CREATION_LIMIT",
      "PROMO_CREATION_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PROMO_CREATION_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PROMO_CREATION_LIMIT",
      "PROMO_CREATION_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  saleAuction(): Address {
    let result = super.call("saleAuction", "saleAuction():(address)", []);

    return result[0].toAddress();
  }

  try_saleAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall("saleAuction", "saleAuction():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getKitty(_id: BigInt): CryptoKitties__getKittyResult {
    let result = super.call(
      "getKitty",
      "getKitty(uint256):(bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );

    return new CryptoKitties__getKittyResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt()
    );
  }

  try_getKitty(
    _id: BigInt
  ): ethereum.CallResult<CryptoKitties__getKittyResult> {
    let result = super.tryCall(
      "getKitty",
      "getKitty(uint256):(bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CryptoKitties__getKittyResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt()
      )
    );
  }

  gen0CreatedCount(): BigInt {
    let result = super.call(
      "gen0CreatedCount",
      "gen0CreatedCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_gen0CreatedCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gen0CreatedCount",
      "gen0CreatedCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  geneScience(): Address {
    let result = super.call("geneScience", "geneScience():(address)", []);

    return result[0].toAddress();
  }

  try_geneScience(): ethereum.CallResult<Address> {
    let result = super.tryCall("geneScience", "geneScience():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SetSiringAuctionAddressCall extends ethereum.Call {
  get inputs(): SetSiringAuctionAddressCall__Inputs {
    return new SetSiringAuctionAddressCall__Inputs(this);
  }

  get outputs(): SetSiringAuctionAddressCall__Outputs {
    return new SetSiringAuctionAddressCall__Outputs(this);
  }
}

export class SetSiringAuctionAddressCall__Inputs {
  _call: SetSiringAuctionAddressCall;

  constructor(call: SetSiringAuctionAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSiringAuctionAddressCall__Outputs {
  _call: SetSiringAuctionAddressCall;

  constructor(call: SetSiringAuctionAddressCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class SetGeneScienceAddressCall extends ethereum.Call {
  get inputs(): SetGeneScienceAddressCall__Inputs {
    return new SetGeneScienceAddressCall__Inputs(this);
  }

  get outputs(): SetGeneScienceAddressCall__Outputs {
    return new SetGeneScienceAddressCall__Outputs(this);
  }
}

export class SetGeneScienceAddressCall__Inputs {
  _call: SetGeneScienceAddressCall;

  constructor(call: SetGeneScienceAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGeneScienceAddressCall__Outputs {
  _call: SetGeneScienceAddressCall;

  constructor(call: SetGeneScienceAddressCall) {
    this._call = call;
  }
}

export class SetCEOCall extends ethereum.Call {
  get inputs(): SetCEOCall__Inputs {
    return new SetCEOCall__Inputs(this);
  }

  get outputs(): SetCEOCall__Outputs {
    return new SetCEOCall__Outputs(this);
  }
}

export class SetCEOCall__Inputs {
  _call: SetCEOCall;

  constructor(call: SetCEOCall) {
    this._call = call;
  }

  get _newCEO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCEOCall__Outputs {
  _call: SetCEOCall;

  constructor(call: SetCEOCall) {
    this._call = call;
  }
}

export class SetCOOCall extends ethereum.Call {
  get inputs(): SetCOOCall__Inputs {
    return new SetCOOCall__Inputs(this);
  }

  get outputs(): SetCOOCall__Outputs {
    return new SetCOOCall__Outputs(this);
  }
}

export class SetCOOCall__Inputs {
  _call: SetCOOCall;

  constructor(call: SetCOOCall) {
    this._call = call;
  }

  get _newCOO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCOOCall__Outputs {
  _call: SetCOOCall;

  constructor(call: SetCOOCall) {
    this._call = call;
  }
}

export class CreateSaleAuctionCall extends ethereum.Call {
  get inputs(): CreateSaleAuctionCall__Inputs {
    return new CreateSaleAuctionCall__Inputs(this);
  }

  get outputs(): CreateSaleAuctionCall__Outputs {
    return new CreateSaleAuctionCall__Outputs(this);
  }
}

export class CreateSaleAuctionCall__Inputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }

  get _kittyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateSaleAuctionCall__Outputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class CreateSiringAuctionCall extends ethereum.Call {
  get inputs(): CreateSiringAuctionCall__Inputs {
    return new CreateSiringAuctionCall__Inputs(this);
  }

  get outputs(): CreateSiringAuctionCall__Outputs {
    return new CreateSiringAuctionCall__Outputs(this);
  }
}

export class CreateSiringAuctionCall__Inputs {
  _call: CreateSiringAuctionCall;

  constructor(call: CreateSiringAuctionCall) {
    this._call = call;
  }

  get _kittyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateSiringAuctionCall__Outputs {
  _call: CreateSiringAuctionCall;

  constructor(call: CreateSiringAuctionCall) {
    this._call = call;
  }
}

export class SetAutoBirthFeeCall extends ethereum.Call {
  get inputs(): SetAutoBirthFeeCall__Inputs {
    return new SetAutoBirthFeeCall__Inputs(this);
  }

  get outputs(): SetAutoBirthFeeCall__Outputs {
    return new SetAutoBirthFeeCall__Outputs(this);
  }
}

export class SetAutoBirthFeeCall__Inputs {
  _call: SetAutoBirthFeeCall;

  constructor(call: SetAutoBirthFeeCall) {
    this._call = call;
  }

  get val(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAutoBirthFeeCall__Outputs {
  _call: SetAutoBirthFeeCall;

  constructor(call: SetAutoBirthFeeCall) {
    this._call = call;
  }
}

export class ApproveSiringCall extends ethereum.Call {
  get inputs(): ApproveSiringCall__Inputs {
    return new ApproveSiringCall__Inputs(this);
  }

  get outputs(): ApproveSiringCall__Outputs {
    return new ApproveSiringCall__Outputs(this);
  }
}

export class ApproveSiringCall__Inputs {
  _call: ApproveSiringCall;

  constructor(call: ApproveSiringCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _sireId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveSiringCall__Outputs {
  _call: ApproveSiringCall;

  constructor(call: ApproveSiringCall) {
    this._call = call;
  }
}

export class SetCFOCall extends ethereum.Call {
  get inputs(): SetCFOCall__Inputs {
    return new SetCFOCall__Inputs(this);
  }

  get outputs(): SetCFOCall__Outputs {
    return new SetCFOCall__Outputs(this);
  }
}

export class SetCFOCall__Inputs {
  _call: SetCFOCall;

  constructor(call: SetCFOCall) {
    this._call = call;
  }

  get _newCFO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCFOCall__Outputs {
  _call: SetCFOCall;

  constructor(call: SetCFOCall) {
    this._call = call;
  }
}

export class CreatePromoKittyCall extends ethereum.Call {
  get inputs(): CreatePromoKittyCall__Inputs {
    return new CreatePromoKittyCall__Inputs(this);
  }

  get outputs(): CreatePromoKittyCall__Outputs {
    return new CreatePromoKittyCall__Outputs(this);
  }
}

export class CreatePromoKittyCall__Inputs {
  _call: CreatePromoKittyCall;

  constructor(call: CreatePromoKittyCall) {
    this._call = call;
  }

  get _genes(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePromoKittyCall__Outputs {
  _call: CreatePromoKittyCall;

  constructor(call: CreatePromoKittyCall) {
    this._call = call;
  }
}

export class SetSecondsPerBlockCall extends ethereum.Call {
  get inputs(): SetSecondsPerBlockCall__Inputs {
    return new SetSecondsPerBlockCall__Inputs(this);
  }

  get outputs(): SetSecondsPerBlockCall__Outputs {
    return new SetSecondsPerBlockCall__Outputs(this);
  }
}

export class SetSecondsPerBlockCall__Inputs {
  _call: SetSecondsPerBlockCall;

  constructor(call: SetSecondsPerBlockCall) {
    this._call = call;
  }

  get secs(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSecondsPerBlockCall__Outputs {
  _call: SetSecondsPerBlockCall;

  constructor(call: SetSecondsPerBlockCall) {
    this._call = call;
  }
}

export class WithdrawBalanceCall extends ethereum.Call {
  get inputs(): WithdrawBalanceCall__Inputs {
    return new WithdrawBalanceCall__Inputs(this);
  }

  get outputs(): WithdrawBalanceCall__Outputs {
    return new WithdrawBalanceCall__Outputs(this);
  }
}

export class WithdrawBalanceCall__Inputs {
  _call: WithdrawBalanceCall;

  constructor(call: WithdrawBalanceCall) {
    this._call = call;
  }
}

export class WithdrawBalanceCall__Outputs {
  _call: WithdrawBalanceCall;

  constructor(call: WithdrawBalanceCall) {
    this._call = call;
  }
}

export class SetSaleAuctionAddressCall extends ethereum.Call {
  get inputs(): SetSaleAuctionAddressCall__Inputs {
    return new SetSaleAuctionAddressCall__Inputs(this);
  }

  get outputs(): SetSaleAuctionAddressCall__Outputs {
    return new SetSaleAuctionAddressCall__Outputs(this);
  }
}

export class SetSaleAuctionAddressCall__Inputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSaleAuctionAddressCall__Outputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }
}

export class SetNewAddressCall extends ethereum.Call {
  get inputs(): SetNewAddressCall__Inputs {
    return new SetNewAddressCall__Inputs(this);
  }

  get outputs(): SetNewAddressCall__Outputs {
    return new SetNewAddressCall__Outputs(this);
  }
}

export class SetNewAddressCall__Inputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }

  get _v2Address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNewAddressCall__Outputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class GiveBirthCall extends ethereum.Call {
  get inputs(): GiveBirthCall__Inputs {
    return new GiveBirthCall__Inputs(this);
  }

  get outputs(): GiveBirthCall__Outputs {
    return new GiveBirthCall__Outputs(this);
  }
}

export class GiveBirthCall__Inputs {
  _call: GiveBirthCall;

  constructor(call: GiveBirthCall) {
    this._call = call;
  }

  get _matronId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GiveBirthCall__Outputs {
  _call: GiveBirthCall;

  constructor(call: GiveBirthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawAuctionBalancesCall extends ethereum.Call {
  get inputs(): WithdrawAuctionBalancesCall__Inputs {
    return new WithdrawAuctionBalancesCall__Inputs(this);
  }

  get outputs(): WithdrawAuctionBalancesCall__Outputs {
    return new WithdrawAuctionBalancesCall__Outputs(this);
  }
}

export class WithdrawAuctionBalancesCall__Inputs {
  _call: WithdrawAuctionBalancesCall;

  constructor(call: WithdrawAuctionBalancesCall) {
    this._call = call;
  }
}

export class WithdrawAuctionBalancesCall__Outputs {
  _call: WithdrawAuctionBalancesCall;

  constructor(call: WithdrawAuctionBalancesCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class CreateGen0AuctionCall extends ethereum.Call {
  get inputs(): CreateGen0AuctionCall__Inputs {
    return new CreateGen0AuctionCall__Inputs(this);
  }

  get outputs(): CreateGen0AuctionCall__Outputs {
    return new CreateGen0AuctionCall__Outputs(this);
  }
}

export class CreateGen0AuctionCall__Inputs {
  _call: CreateGen0AuctionCall;

  constructor(call: CreateGen0AuctionCall) {
    this._call = call;
  }

  get _genes(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateGen0AuctionCall__Outputs {
  _call: CreateGen0AuctionCall;

  constructor(call: CreateGen0AuctionCall) {
    this._call = call;
  }
}

export class SetMetadataAddressCall extends ethereum.Call {
  get inputs(): SetMetadataAddressCall__Inputs {
    return new SetMetadataAddressCall__Inputs(this);
  }

  get outputs(): SetMetadataAddressCall__Outputs {
    return new SetMetadataAddressCall__Outputs(this);
  }
}

export class SetMetadataAddressCall__Inputs {
  _call: SetMetadataAddressCall;

  constructor(call: SetMetadataAddressCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMetadataAddressCall__Outputs {
  _call: SetMetadataAddressCall;

  constructor(call: SetMetadataAddressCall) {
    this._call = call;
  }
}

export class BidOnSiringAuctionCall extends ethereum.Call {
  get inputs(): BidOnSiringAuctionCall__Inputs {
    return new BidOnSiringAuctionCall__Inputs(this);
  }

  get outputs(): BidOnSiringAuctionCall__Outputs {
    return new BidOnSiringAuctionCall__Outputs(this);
  }
}

export class BidOnSiringAuctionCall__Inputs {
  _call: BidOnSiringAuctionCall;

  constructor(call: BidOnSiringAuctionCall) {
    this._call = call;
  }

  get _sireId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _matronId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BidOnSiringAuctionCall__Outputs {
  _call: BidOnSiringAuctionCall;

  constructor(call: BidOnSiringAuctionCall) {
    this._call = call;
  }
}

export class BreedWithAutoCall extends ethereum.Call {
  get inputs(): BreedWithAutoCall__Inputs {
    return new BreedWithAutoCall__Inputs(this);
  }

  get outputs(): BreedWithAutoCall__Outputs {
    return new BreedWithAutoCall__Outputs(this);
  }
}

export class BreedWithAutoCall__Inputs {
  _call: BreedWithAutoCall;

  constructor(call: BreedWithAutoCall) {
    this._call = call;
  }

  get _matronId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sireId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BreedWithAutoCall__Outputs {
  _call: BreedWithAutoCall;

  constructor(call: BreedWithAutoCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
